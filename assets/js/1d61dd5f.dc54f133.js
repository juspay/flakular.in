"use strict";(self.webpackChunkzero_to_flakes=self.webpackChunkzero_to_flakes||[]).push([[5327],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),u=r,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5014:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>v,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var a=n(7462),r=n(7294),i=n(3905),o=function(){return o=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},o.apply(this,arguments)};function l(e){var t=r.useState(!1),n=t[0],a=t[1],i=r.useState(!1),l=i[0],s=i[1],c=encodeURIComponent(e.id),p="string"==typeof e.playlistCoverId?encodeURIComponent(e.playlistCoverId):null,m=e.title,d=e.poster||"hqdefault",u="&"+e.params||0,h=e.muted?"&mute=1":"",v=e.announce||"Watch",f=e.webp?"webp":"jpg",k=e.webp?"vi_webp":"vi",g=e.thumbnail||(e.playlist?"https://i.ytimg.com/"+k+"/"+p+"/"+d+"."+f:"https://i.ytimg.com/"+k+"/"+c+"/"+d+"."+f),y=e.noCookie;y=e.cookie?"https://www.youtube.com":"https://www.youtube-nocookie.com";var b=e.playlist?y+"/embed/videoseries?autoplay=1"+h+"&list="+c+u:y+"/embed/"+c+"?autoplay=1&state=1"+h+u,N=e.activatedClass||"lyt-activated",w=e.adNetwork||!1,x=e.aspectHeight||9,C=e.aspectWidth||16,E=e.iframeClass||"",O=e.playerClass||"lty-playbtn",j=e.wrapperClass||"yt-lite",T=e.onIframeAdded||function(){},S=e.rel?"prefetch":"preload";return r.useEffect((function(){l&&T()}),[l]),r.createElement(r.Fragment,null,r.createElement("link",{rel:S,href:g,as:"image"}),r.createElement(r.Fragment,null,n&&r.createElement(r.Fragment,null,r.createElement("link",{rel:"preconnect",href:y}),r.createElement("link",{rel:"preconnect",href:"https://www.google.com"}),w&&r.createElement(r.Fragment,null,r.createElement("link",{rel:"preconnect",href:"https://static.doubleclick.net"}),r.createElement("link",{rel:"preconnect",href:"https://googleads.g.doubleclick.net"})))),r.createElement("article",{onPointerOver:function(){n||a(!0)},onClick:function(){l||s(!0)},className:j+" "+(l?N:""),"data-title":m,style:o({backgroundImage:"url("+g+")"},{"--aspect-ratio":x/C*100+"%"})},r.createElement("button",{type:"button",className:O,"aria-label":v+" "+m}),l&&r.createElement("iframe",{className:E,title:m,width:"560",height:"315",frameBorder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0,src:b})))}const s={slug:"/direnv"},c="Using direnv to manage dev environments",p={unversionedId:"practices/direnv",id:"practices/direnv",title:"Using direnv to manage dev environments",description:"direnv (along with [nix-direnv]) allows one to persist nix devshell environments and share them seamlessly with text editors and IDEs. It obviates having to run nix develop manually every time you open a new terminal. The moment you cd into your project directory, the devshell is automatically activated, thanks to direnv.",source:"@site/docs/practices/direnv.md",sourceDirName:"practices",slug:"/direnv",permalink:"/direnv",draft:!1,editUrl:"https://github.com/juspay/zero-to-flakes/edit/main/docs/practices/direnv.md",tags:[],version:"current",frontMatter:{slug:"/direnv"},sidebar:"tutorialSidebar",previous:{title:"Best Practices",permalink:"/practices"},next:{title:"Building a docker image",permalink:"/docker"}},m={},d=[{value:"Setup",id:"setup",level:2},{value:"Text Editor configuration",id:"text-editor-configuration",level:3},{value:"VSCode",id:"vscode",level:4},{value:"Doom Emacs",id:"doom-emacs",level:4},{value:"Add a <code>.envrc</code>",id:"add-a-envrc",level:2},{value:"Reload when .cabal file changes",id:"reload-when-cabal-file-changes",level:3},{value:"External Links",id:"external-links",level:2}],u={toc:d},h="wrapper";function v(e){let{components:t,...n}=e;return(0,i.kt)(h,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"using-direnv-to-manage-dev-environments"},"Using direnv to manage dev environments"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"direnv")," (along with ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nix-community/nix-direnv"},"nix-direnv"),") allows one to persist",(0,i.kt)("sup",{parentName:"p",id:"fnref-gc"},(0,i.kt)("a",{parentName:"sup",href:"#fn-gc",className:"footnote-ref"},"gc"))," nix devshell environments and share them seamlessly with text editors and IDEs. It obviates having to run ",(0,i.kt)("inlineCode",{parentName:"p"},"nix develop")," manually every time you open a new terminal. The moment you ",(0,i.kt)("inlineCode",{parentName:"p"},"cd")," into your project directory, the devshell is automatically activated, thanks to ",(0,i.kt)("inlineCode",{parentName:"p"},"direnv"),". "),(0,i.kt)("admonition",{title:"Starship",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"It is recommended to use ",(0,i.kt)("a",{parentName:"p",href:"https://starship.rs/"},(0,i.kt)("strong",{parentName:"a"},"starship"))," along with nix-direnv, because it gives a visual indication of the current environment. For example, if you are in a ",(0,i.kt)("inlineCode",{parentName:"p"},"nix develop")," shell, your terminal prompt automatically changes to something like this:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"srid on nixos haskell-template on \ue0a0 master [!] via \u03bb 9.2.6 via \u2744\ufe0f  impure (ghc-shell-for-haskell-template-0.1.0.0-0-env)\n\u276f\n"))),(0,i.kt)("h2",{id:"setup"},"Setup"),(0,i.kt)("div",{className:"video-container"},(0,i.kt)(l,{id:"1joZLTgYLxY",title:"wtf is direnv?",mdxType:"LiteYouTubeEmbed"})),(0,i.kt)("p",null,"If you use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nix-community/home-manager"},"home-manager"),", both ",(0,i.kt)("inlineCode",{parentName:"p"},"nix-direnv")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"starship")," can be installed using the following configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-nix",metastring:'title="home.nix"',title:'"home.nix"'},"programs.direnv = {\n  enable = true;\n  nix-direnv.enable = true;\n};\nprograms.starship = {\n  enable = true;\n};\n")),(0,i.kt)("admonition",{title:"Newcomer Tip",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"If you have never used ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nix-community/home-manager"},"home-manager")," before, we recommend that you set it up",(0,i.kt)("sup",{parentName:"p",id:"fnref-nf"},(0,i.kt)("a",{parentName:"sup",href:"#fn-nf",className:"footnote-ref"},"nf"))," by following the instrutions at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/juspay/nix-dev-home"},"https://github.com/juspay/nix-dev-home"),".")),(0,i.kt)("h3",{id:"text-editor-configuration"},"Text Editor configuration"),(0,i.kt)("h4",{id:"vscode"},"VSCode"),(0,i.kt)("p",null,"For VSCode, use ",(0,i.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=mkhl.direnv"},"Martin K\xfchl's direnv extension"),"."),(0,i.kt)("h4",{id:"doom-emacs"},"Doom Emacs"),(0,i.kt)("p",null,"Doom Emacs has the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/doomemacs/doomemacs/tree/master/modules/tools/direnv"},(0,i.kt)("inlineCode",{parentName:"a"},":tools")," ",(0,i.kt)("inlineCode",{parentName:"a"},"direnv")," module")," to automatically load the devshell environment when you open the project directory."),(0,i.kt)("h2",{id:"add-a-envrc"},"Add a ",(0,i.kt)("inlineCode",{parentName:"h2"},".envrc")),(0,i.kt)("p",null,"To enable direnv on Flake-based projects, add the following to your ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title=".envrc"',title:'".envrc"'},"use flake\n")),(0,i.kt)("p",null,"Now run ",(0,i.kt)("inlineCode",{parentName:"p"},"direnv allow")," to authorize the current ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc")," file. You can now ",(0,i.kt)("inlineCode",{parentName:"p"},"cd")," into the project directory in a terminal and the devshell will be automatically activated."),(0,i.kt)("h3",{id:"reload-when-cabal-file-changes"},"Reload when .cabal file changes"),(0,i.kt)("p",null,"Since both ",(0,i.kt)("a",{parentName:"p",href:"/nixpkgs-haskell"},"nixpkgs")," and ",(0,i.kt)("a",{parentName:"p",href:"/haskell-flake"},"haskell-flake")," use Nix expressions that read the ",(0,i.kt)("inlineCode",{parentName:"p"},".cabal")," file to get dependency information, you will want the devshell be recreated every time a ",(0,i.kt)("inlineCode",{parentName:"p"},".cabal")," file changes. This can be achieved using the ",(0,i.kt)("inlineCode",{parentName:"p"},"nix_direnv_watch_file")," function. Modify your ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc")," to contain:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title=".envrc"',title:'".envrc"'},"nix_direnv_watch_file *.cabal\nuse flake\n")),(0,i.kt)("p",null,"As a result of this whenever you change a ",(0,i.kt)("inlineCode",{parentName:"p"},".cabal")," file, direnv will reload the environment. If you are using VSCode, you will see a notification that the environment has changed, prompting you to restart it (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nammayatri/nammayatri/tree/main/Backend#visual-studio-code"},"see example"),")."),(0,i.kt)("h2",{id:"external-links"},"External Links"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://determinate.systems/posts/nix-direnv"},"Effortless dev environments with Nix and direnv"))),(0,i.kt)("div",{className:"footnotes"},(0,i.kt)("hr",{parentName:"div"}),(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol",id:"fn-gc"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/nix-community/nix-direnv"},"nix-direnv")," prevents garbage collection of the devshell, so you do not have to re-download things again. direnv also enables activating the devshell in your current shell, without needing to use a customized bash.",(0,i.kt)("a",{parentName:"li",href:"#fnref-gc",className:"footnote-backref"},"\u21a9")),(0,i.kt)("li",{parentName:"ol",id:"fn-nf"},'The "nix-dev-home" template uses ',(0,i.kt)("a",{parentName:"li",href:"/nixos-flake"},"nixos-flake"),", and works on both Linux or macOS.",(0,i.kt)("a",{parentName:"li",href:"#fnref-nf",className:"footnote-backref"},"\u21a9")))))}v.isMDXComponent=!0}}]);