"use strict";(self.webpackChunkzero_to_flakes=self.webpackChunkzero_to_flakes||[]).push([[685],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(a),d=l,m=c["".concat(s,".").concat(d)]||c[d]||k[d]||r;return a?n.createElement(m,i(i({ref:t},u),{},{components:a})):n.createElement(m,i({ref:t},u))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8430:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>k,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var n=a(7462),l=(a(7294),a(3905));const r={sidebar_position:1},i="Getting Started",o={unversionedId:"modules/haskell/start/start",id:"modules/haskell/start/start",title:"Getting Started",description:"Before using haskell-flake you must first [[nix|install Nix with Flakes enabled]].",source:"@site/docs/modules/haskell/start/start.md",sourceDirName:"modules/haskell/start",slug:"/modules/haskell/start/",permalink:"/modules/haskell/start/",draft:!1,editUrl:"https://github.com/juspay/zero-to-flakes/tree/main/docs/modules/haskell/start/start.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"haskell-flake",permalink:"/haskell-flake"},next:{title:"Basics",permalink:"/haskell/basics"}},s={},p=[{value:"Existing projects",id:"existing-projects",level:2},{value:"New projects",id:"new-projects",level:2},{value:"Template",id:"template",level:3},{value:"Under the hood",id:"under-the-hood",level:2},{value:"Next steps",id:"next-steps",level:2}],u={toc:p},c="wrapper";function k(e){let{components:t,...a}=e;return(0,l.kt)(c,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"getting-started"},"Getting Started"),(0,l.kt)("p",null,"Before using ",(0,l.kt)("inlineCode",{parentName:"p"},"haskell-flake")," you must first [","[nix|install Nix with Flakes enabled]","]."),(0,l.kt)("h2",{id:"existing-projects"},"Existing projects"),(0,l.kt)("p",null,"To use ",(0,l.kt)("inlineCode",{parentName:"p"},"haskell-flake")," in an ",(0,l.kt)("em",{parentName:"p"},"existing")," Haskell project, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"nix flake init -t github:srid/haskell-flake\n")),(0,l.kt)("p",null,"Open the generated ",(0,l.kt)("inlineCode",{parentName:"p"},"flake.nix")," and change ",(0,l.kt)("inlineCode",{parentName:"p"},"self'.packages.example")," to use your package name. For example, if your package is named ",(0,l.kt)("inlineCode",{parentName:"p"},"my-package")," (with a ",(0,l.kt)("inlineCode",{parentName:"p"},"my-package.cabal")," file), change ",(0,l.kt)("inlineCode",{parentName:"p"},"example")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"my-package"),". Follow the comments along the ",(0,l.kt)("inlineCode",{parentName:"p"},"flake.nix")," to make any necessary changes to the project configuration."),(0,l.kt)("h2",{id:"new-projects"},"New projects"),(0,l.kt)("p",null,"To create a ",(0,l.kt)("em",{parentName:"p"},"new")," Haskell project, instead, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir example && cd ./example\nnix flake init -t github:srid/haskell-flake#example\n")),(0,l.kt)("h3",{id:"template"},"Template"),(0,l.kt)("p",null,"You may also use ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/srid/haskell-template"},"https://github.com/srid/haskell-template")," which already uses ",(0,l.kt)("inlineCode",{parentName:"p"},"haskell-flake")," along with other opinionated defaults."),(0,l.kt)("h2",{id:"under-the-hood"},"Under the hood"),(0,l.kt)("p",null,"When nixifying a Haskell project without flake-parts (thus without haskell-flake) you would generally use the [","[nixpkgs-haskell|raw Haskell infrastructure from nixpkgs]","]. haskell-flake uses these functions, while exposing a simpler ",(0,l.kt)("a",{parentName:"p",href:"https://nixos.wiki/wiki/NixOS_modules"},"modular")," API on top: your ",(0,l.kt)("inlineCode",{parentName:"p"},"flake.nix")," becomes more ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/srid/haskell-template/blob/304fb5a1adfb25c7691febc15911b588a364a5f7/flake.nix#L27-L39"},"declarative")," and less ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/srid/haskell-template/blob/3fc6858830ecee3d2fe1dfe9a8bfa2047cf561ac/flake.nix#L20-L79"},"imperative"),"."),(0,l.kt)("p",null,"In addition, compared to using plain nixpkgs, haskell-flake supports:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Auto-detection of local packages based on ",(0,l.kt)("inlineCode",{parentName:"li"},"cabal.project")," file (via ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/srid/haskell-flake/tree/master/nix/haskell-parsers"},"haskell-parsers"),")"),(0,l.kt)("li",{parentName:"ul"},"Parse executables from ",(0,l.kt)("inlineCode",{parentName:"li"},".cabal")," file "),(0,l.kt)("li",{parentName:"ul"},"Modular interface to ",(0,l.kt)("inlineCode",{parentName:"li"},"pkgs.haskell.lib.compose.*")," (via ",(0,l.kt)("inlineCode",{parentName:"li"},"packages")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"settings")," submodules)"),(0,l.kt)("li",{parentName:"ul"},"Composition of dependency overrides, and other project settings, via [","[modules]","]")),(0,l.kt)("h2",{id:"next-steps"},"Next steps"),(0,l.kt)("p",null,"Visit ",(0,l.kt)("a",{parentName:"p",href:"/haskell/guide"},"guide")," for more details, and [","[ref]","] for module options. If you are new to Nix, see [","[basics]","]. See [","[howto]","] for tangential topics."))}k.isMDXComponent=!0}}]);