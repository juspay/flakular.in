"use strict";(self.webpackChunkflakular=self.webpackChunkflakular||[]).push([[4179],{3905:(e,l,t)=>{t.d(l,{Zo:()=>h,kt:()=>m});var n=t(7294);function r(e,l,t){return l in e?Object.defineProperty(e,l,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[l]=t,e}function a(e,l){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);l&&(n=n.filter((function(l){return Object.getOwnPropertyDescriptor(e,l).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var l=1;l<arguments.length;l++){var t=null!=arguments[l]?arguments[l]:{};l%2?a(Object(t),!0).forEach((function(l){r(e,l,t[l])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(l){Object.defineProperty(e,l,Object.getOwnPropertyDescriptor(t,l))}))}return e}function s(e,l){if(null==e)return{};var t,n,r=function(e,l){if(null==e)return{};var t,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],l.indexOf(t)>=0||(r[t]=e[t]);return r}(e,l);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],l.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=n.createContext({}),p=function(e){var l=n.useContext(i),t=l;return e&&(t="function"==typeof e?e(l):o(o({},l),e)),t},h=function(e){var l=p(e.components);return n.createElement(i.Provider,{value:l},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var l=e.children;return n.createElement(n.Fragment,{},l)}},d=n.forwardRef((function(e,l){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),c=p(t),d=r,m=c["".concat(i,".").concat(d)]||c[d]||u[d]||a;return t?n.createElement(m,o(o({ref:l},h),{},{components:t})):n.createElement(m,o({ref:l},h))}));function m(e,l){var t=arguments,r=l&&l.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=d;var s={};for(var i in l)hasOwnProperty.call(l,i)&&(s[i]=l[i]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4504:(e,l,t)=>{t.r(l),t.d(l,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=t(7462),r=(t(7294),t(3905));const a={slug:"/haskell-flake/devshell"},o="DevShell",s={unversionedId:"modules/haskell-flake/guide/devshell",id:"modules/haskell-flake/guide/devshell",title:"DevShell",description:"haskell-flake uses the shellFor function to provide a Haskell development shell. shellFor in turn uses the standard mkShell function to create a Nix shell environment. The mkShellArgs option can be used to pass custom arguments to mkShell.",source:"@site/docs/modules/haskell-flake/guide/devshell.md",sourceDirName:"modules/haskell-flake/guide",slug:"/haskell-flake/devshell",permalink:"/haskell-flake/devshell",draft:!1,editUrl:"https://github.com/srid/haskell-flake/blob/master/doc/guide/devshell.md",tags:[],version:"current",frontMatter:{slug:"/haskell-flake/devshell"},sidebar:"tutorialSidebar",previous:{title:"Overriding dependencies",permalink:"/haskell-flake/dependency"},next:{title:"Project modules",permalink:"/haskell-flake/modules"}},i={},p=[{value:"Composing devShells",id:"composing-devshells",level:2}],h={toc:p},c="wrapper";function u(e){let{components:l,...t}=e;return(0,r.kt)(c,(0,n.Z)({},h,t,{components:l,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"devshell"},"DevShell"),(0,r.kt)("p",null,"haskell-flake uses the ",(0,r.kt)("a",{parentName:"p",href:"https://nixos.org/manual/nixpkgs/unstable/#haskell-shellFor"},(0,r.kt)("inlineCode",{parentName:"a"},"shellFor"))," function to provide a Haskell development shell. ",(0,r.kt)("inlineCode",{parentName:"p"},"shellFor")," in turn uses the standard ",(0,r.kt)("a",{parentName:"p",href:"https://nixos.org/manual/nixpkgs/stable/#sec-pkgs-mkShell"},(0,r.kt)("inlineCode",{parentName:"a"},"mkShell"))," function to create a Nix shell environment. The ",(0,r.kt)("inlineCode",{parentName:"p"},"mkShellArgs")," option can be used to pass custom arguments to ",(0,r.kt)("inlineCode",{parentName:"p"},"mkShell"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-nix"},"{\n  haskellProjects.default = {\n    devShell = {\n      mkShellArgs = {\n        shellHook = ''\n          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${pkgs.flint}/lib\n        ''\n      };\n    }\n  }\n}\n")),(0,r.kt)("h2",{id:"composing-devshells"},"Composing devShells"),(0,r.kt)("p",null,"While ",(0,r.kt)("inlineCode",{parentName:"p"},"mkShellArgs")," is a convenient way to extend the Haskell devShell, sometimes you want to compose multiple devShell environments in a way you want."),(0,r.kt)("p",null,"The devShell of a haskell-flake project is exposed in the ",(0,r.kt)("inlineCode",{parentName:"p"},"config.haskellProjects.<name>.outputs.devShell")," attribute. You can pass this devShell to the ",(0,r.kt)("inlineCode",{parentName:"p"},"inputsFrom")," argument of a ",(0,r.kt)("a",{parentName:"p",href:"https://nixos.org/manual/nixpkgs/stable/#sec-pkgs-mkShell"},(0,r.kt)("inlineCode",{parentName:"a"},"mkShell"))," function in order to include the Haskell devShell in another devShell. The same technique can be used to compose devShells created by other flake-parts modules. "),(0,r.kt)("p",null,"For example, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/srid/haskell-template/blob/fc263b19e4ef02710ffc61fc656aec6c1a873974/flake.nix#L96-L102"},"in haskell-template"),", we create a top-level devShell that merges the devShell of the haskell-flake project, the devShell of ",(0,r.kt)("a",{parentName:"p",href:"/mission-control"},"mission-control")," and the devShell of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/srid/flake-root"},"flake-root")," as follows::"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-nix"},"{\n  devShell = pkgs.mkShell {\n    inputsFrom = [\n      config.haskellProjects.default.outputs.devShell\n      config.flake-root.devShell\n      config.mission-control.devShell\n    ];\n  };\n}\n")),(0,r.kt)("p",null,"This sort of composition is either impossible or very complex to do with the ",(0,r.kt)("inlineCode",{parentName:"p"},"mkShellArgs")," approach."))}u.isMDXComponent=!0}}]);