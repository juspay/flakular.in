"use strict";(self.webpackChunkzero_to_flakes=self.webpackChunkzero_to_flakes||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Intro","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Install Nix","href":"/install","docId":"intro/install"},{"type":"link","label":"Rapid Introduction to Nix","href":"/nix-rapid","docId":"intro/nix-rapid"}],"href":"/intro/"},{"type":"category","label":"Foundations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"The Nix Store","href":"/store","docId":"foundations/nix-store"},{"type":"link","label":"The Nix Language","href":"/lang","docId":"foundations/lang"},{"type":"link","label":"Flakes","href":"/flakes","docId":"foundations/flakes"},{"type":"link","label":"Module system","href":"/mod","docId":"foundations/mod"},{"type":"link","label":"flake-parts","href":"/flake-parts","docId":"foundations/flake-parts"}],"href":"/foundations"},{"type":"category","label":"Modules","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Devshell scripts (mission-control)","href":"/mission-control","docId":"modules/mission-control"},{"type":"link","label":"Auto formatting (treefmt-nix)","href":"/treefmt-nix","docId":"modules/treefmt"}],"href":"/modules"},{"type":"category","label":"Best Practices","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Using direnv to manage dev environments","href":"/direnv","docId":"practices/direnv"},{"type":"link","label":"Building a docker image","href":"/docker","docId":"practices/docker"}],"href":"/practices"}]},"docs":{"foundations/flake-parts":{"id":"foundations/flake-parts","title":"flake-parts","description":"","sidebar":"tutorialSidebar"},"foundations/flakes":{"id":"foundations/flakes","title":"Flakes","description":"","sidebar":"tutorialSidebar"},"foundations/lang":{"id":"foundations/lang","title":"The Nix Language","description":"","sidebar":"tutorialSidebar"},"foundations/mod":{"id":"foundations/mod","title":"Module system","description":"","sidebar":"tutorialSidebar"},"foundations/nix-store":{"id":"foundations/nix-store","title":"The Nix Store","description":"","sidebar":"tutorialSidebar"},"intro/install":{"id":"intro/install","title":"Install Nix","description":"Install Nix using the DeterminateSystems installer.","sidebar":"tutorialSidebar"},"intro/intro":{"id":"intro/intro","title":"Intro","description":"These docs are heavily a work in progress. DO NOT SHARE YET.","sidebar":"tutorialSidebar"},"intro/nix-rapid":{"id":"intro/nix-rapid","title":"Rapid Introduction to Nix","description":"This is a legacy tutorial. We\'ll cover the topics in detail under Foundations.","sidebar":"tutorialSidebar"},"modules/mission-control":{"id":"modules/mission-control","title":"Devshell scripts (mission-control)","description":"The mission-control flake-parts module enables creating a set of scripts or commands to run in the Nix dev shell. This makes it possible for the project\'s user to locate all of the commands\xa0they need (to get started) in one place, often replacing the likes of Makefile or bin/ scripts.","sidebar":"tutorialSidebar"},"modules/treefmt":{"id":"modules/treefmt","title":"Auto formatting (treefmt-nix)","description":"treefmt provides an interface to run multiple code formatters at once, so you don\'t have to run them manually for each file type.","sidebar":"tutorialSidebar"},"practices/direnv":{"id":"practices/direnv","title":"Using direnv to manage dev environments","description":"direnv, and [nix-direnv] in particular, is an important piece of tool you can use to both persist nix devshell environments and to share it automatically with text editors and IDEs. It also obviates having to run nix develop manually every time you open a new terminal. The moment you cd into your project directory, the devshell is automatically activated, thanks to direnv.","sidebar":"tutorialSidebar"},"practices/docker":{"id":"practices/docker","title":"Building a docker image","description":"Building a docker image is much simpler with Nix compared to writing Dockerfile. Since the entire build process is handled by Nix flakes, most of what\'s left to do for docker image creation is copying of the derivations and configuration.","sidebar":"tutorialSidebar"}}}')}}]);