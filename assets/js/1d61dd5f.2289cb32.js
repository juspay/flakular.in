"use strict";(self.webpackChunkflakular=self.webpackChunkflakular||[]).push([[5327],{4599:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>m});var i=t(5893),a=t(1151),r=t(7294),o=function(){return o=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e},o.apply(this,arguments)};function s(e){var n=r.useState(!1),t=n[0],i=n[1],a=r.useState(!1),s=a[0],l=a[1],c=encodeURIComponent(e.id),d="string"==typeof e.playlistCoverId?encodeURIComponent(e.playlistCoverId):null,h=e.title,m=e.poster||"hqdefault",u="&"+e.params||0,p=e.muted?"&mute=1":"",v=e.announce||"Watch",x=e.webp?"webp":"jpg",f=e.webp?"vi_webp":"vi",g=e.thumbnail||(e.playlist?"https://i.ytimg.com/"+f+"/"+d+"/"+m+"."+x:"https://i.ytimg.com/"+f+"/"+c+"/"+m+"."+x),j=e.noCookie;j=e.cookie?"https://www.youtube.com":"https://www.youtube-nocookie.com";var y=e.playlist?j+"/embed/videoseries?autoplay=1"+p+"&list="+c+u:j+"/embed/"+c+"?autoplay=1&state=1"+p+u,b=e.activatedClass||"lyt-activated",w=e.adNetwork||!1,k=e.aspectHeight||9,E=e.aspectWidth||16,C=e.iframeClass||"",N=e.playerClass||"lty-playbtn",I=e.wrapperClass||"yt-lite",S=e.onIframeAdded||function(){},F=e.rel?"prefetch":"preload";return r.useEffect((function(){s&&S()}),[s]),r.createElement(r.Fragment,null,r.createElement("link",{rel:F,href:g,as:"image"}),r.createElement(r.Fragment,null,t&&r.createElement(r.Fragment,null,r.createElement("link",{rel:"preconnect",href:j}),r.createElement("link",{rel:"preconnect",href:"https://www.google.com"}),w&&r.createElement(r.Fragment,null,r.createElement("link",{rel:"preconnect",href:"https://static.doubleclick.net"}),r.createElement("link",{rel:"preconnect",href:"https://googleads.g.doubleclick.net"})))),r.createElement("article",{onPointerOver:function(){t||i(!0)},onClick:function(){s||l(!0)},className:I+" "+(s?b:""),"data-title":h,style:o({backgroundImage:"url("+g+")"},{"--aspect-ratio":k/E*100+"%"})},r.createElement("button",{type:"button",className:N,"aria-label":v+" "+h}),s&&r.createElement("iframe",{className:C,title:h,width:"560",height:"315",frameBorder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0,src:y})))}const l={slug:"/direnv"},c="Using direnv to manage dev environments",d={id:"practices/direnv",title:"Using direnv to manage dev environments",description:"direnv (along with [nix-direnv]) allows one to persist nix devshell environments and share them seamlessly with text editors and IDEs. It obviates having to run nix develop manually every time you open a new terminal. The moment you cd into your project directory, the devshell is automatically activated, thanks to direnv.",source:"@site/docs/practices/direnv.md",sourceDirName:"practices",slug:"/direnv",permalink:"/direnv",draft:!1,unlisted:!1,editUrl:"https://github.com/juspay/flakular.in/edit/main/docs/practices/direnv.md",tags:[],version:"current",frontMatter:{slug:"/direnv"},sidebar:"tutorialSidebar",previous:{title:"Best Practices",permalink:"/practices"},next:{title:"Building a docker image",permalink:"/docker"}},h={},m=[{value:"Setup",id:"setup",level:2},{value:"Text Editor configuration",id:"text-editor-configuration",level:3},{value:"VSCode",id:"vscode",level:4},{value:"Doom Emacs",id:"doom-emacs",level:4},{value:"Add a <code>.envrc</code>",id:"add-a-envrc",level:2},{value:"Reload when .cabal file changes",id:"reload-when-cabal-file-changes",level:3},{value:"External Links",id:"external-links",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",sup:"sup",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"using-direnv-to-manage-dev-environments",children:"Using direnv to manage dev environments"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"direnv"})," (along with ",(0,i.jsx)(n.a,{href:"https://github.com/nix-community/nix-direnv",children:"nix-direnv"}),") allows one to persist",(0,i.jsx)(n.sup,{children:(0,i.jsx)(n.a,{href:"#user-content-fn-gc",id:"user-content-fnref-gc","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})," nix devshell environments and share them seamlessly with text editors and IDEs. It obviates having to run ",(0,i.jsx)(n.code,{children:"nix develop"})," manually every time you open a new terminal. The moment you ",(0,i.jsx)(n.code,{children:"cd"})," into your project directory, the devshell is automatically activated, thanks to ",(0,i.jsx)(n.code,{children:"direnv"}),"."]}),"\n",(0,i.jsxs)(n.admonition,{title:"Starship",type:"tip",children:[(0,i.jsxs)(n.p,{children:["It is recommended to use ",(0,i.jsx)(n.a,{href:"https://starship.rs/",children:(0,i.jsx)(n.strong,{children:"starship"})})," along with nix-direnv, because it gives a visual indication of the current environment. For example, if you are in a ",(0,i.jsx)(n.code,{children:"nix develop"})," shell, your terminal prompt automatically changes to something like this:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"srid on nixos haskell-template on \ue0a0 master [!] via \u03bb 9.2.6 via \u2744\ufe0f  impure (ghc-shell-for-haskell-template-0.1.0.0-0-env)\n\u276f\n"})})]}),"\n",(0,i.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n","\n","\n",(0,i.jsx)("div",{className:"video-container",children:(0,i.jsx)(s,{id:"1joZLTgYLxY",title:"wtf is direnv?"})}),"\n",(0,i.jsxs)(n.p,{children:["If you use ",(0,i.jsx)(n.a,{href:"https://github.com/nix-community/home-manager",children:"home-manager"}),", both ",(0,i.jsx)(n.code,{children:"nix-direnv"})," and ",(0,i.jsx)(n.code,{children:"starship"})," can be installed using the following configuration:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-nix",metastring:'title="home.nix"',children:"programs.direnv = {\n  enable = true;\n  nix-direnv.enable = true;\n};\nprograms.starship = {\n  enable = true;\n};\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"Newcomer Tip",type:"tip",children:(0,i.jsxs)(n.p,{children:["If you have never used ",(0,i.jsx)(n.a,{href:"https://github.com/nix-community/home-manager",children:"home-manager"})," before, we recommend that you set it up",(0,i.jsx)(n.sup,{children:(0,i.jsx)(n.a,{href:"#user-content-fn-nf",id:"user-content-fnref-nf","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})})," by following the instrutions at ",(0,i.jsx)(n.a,{href:"https://github.com/juspay/nix-dev-home",children:"https://github.com/juspay/nix-dev-home"}),"."]})}),"\n",(0,i.jsx)(n.h3,{id:"text-editor-configuration",children:"Text Editor configuration"}),"\n",(0,i.jsx)(n.h4,{id:"vscode",children:"VSCode"}),"\n",(0,i.jsxs)(n.p,{children:["For VSCode, use ",(0,i.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=mkhl.direnv",children:"Martin K\xfchl's direnv extension"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"doom-emacs",children:"Doom Emacs"}),"\n",(0,i.jsxs)(n.p,{children:["Doom Emacs has the ",(0,i.jsxs)(n.a,{href:"https://github.com/doomemacs/doomemacs/tree/master/modules/tools/direnv",children:[(0,i.jsx)(n.code,{children:":tools"})," ",(0,i.jsx)(n.code,{children:"direnv"})," module"]})," to automatically load the devshell environment when you open the project directory."]}),"\n",(0,i.jsxs)(n.h2,{id:"add-a-envrc",children:["Add a ",(0,i.jsx)(n.code,{children:".envrc"})]}),"\n",(0,i.jsxs)(n.p,{children:["To enable direnv on Flake-based projects, add the following to your ",(0,i.jsx)(n.code,{children:".envrc"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:'title=".envrc"',children:"use flake\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now run ",(0,i.jsx)(n.code,{children:"direnv allow"})," to authorize the current ",(0,i.jsx)(n.code,{children:".envrc"})," file. You can now ",(0,i.jsx)(n.code,{children:"cd"})," into the project directory in a terminal and the devshell will be automatically activated."]}),"\n",(0,i.jsx)(n.h3,{id:"reload-when-cabal-file-changes",children:"Reload when .cabal file changes"}),"\n",(0,i.jsxs)(n.p,{children:["Since both ",(0,i.jsx)(n.a,{href:"/nixpkgs-haskell",children:"nixpkgs"})," and ",(0,i.jsx)(n.a,{href:"/haskell-flake",children:"haskell-flake"})," use Nix expressions that read the ",(0,i.jsx)(n.code,{children:".cabal"})," file to get dependency information, you will want the devshell be recreated every time a ",(0,i.jsx)(n.code,{children:".cabal"})," file changes. This can be achieved using the ",(0,i.jsx)(n.code,{children:"nix_direnv_watch_file"})," function. Modify your ",(0,i.jsx)(n.code,{children:".envrc"})," to contain:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:'title=".envrc"',children:"nix_direnv_watch_file *.cabal\nuse flake\n"})}),"\n",(0,i.jsxs)(n.p,{children:["As a result of this whenever you change a ",(0,i.jsx)(n.code,{children:".cabal"})," file, direnv will reload the environment. If you are using VSCode, you will see a notification that the environment has changed, prompting you to restart it (",(0,i.jsx)(n.a,{href:"https://github.com/nammayatri/nammayatri/tree/main/Backend#visual-studio-code",children:"see example"}),")."]}),"\n",(0,i.jsx)(n.h2,{id:"external-links",children:"External Links"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://determinate.systems/posts/nix-direnv",children:"Effortless dev environments with Nix and direnv"})}),"\n"]}),"\n",(0,i.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,i.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{id:"user-content-fn-gc",children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/nix-community/nix-direnv",children:"nix-direnv"})," prevents garbage collection of the devshell, so you do not have to re-download things again. direnv also enables activating the devshell in your current shell, without needing to use a customized bash. ",(0,i.jsx)(n.a,{href:"#user-content-fnref-gc","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{id:"user-content-fn-nf",children:["\n",(0,i.jsxs)(n.p,{children:['The "nix-dev-home" template uses ',(0,i.jsx)(n.a,{href:"/nixos-flake",children:"nixos-flake"}),", and works on both Linux or macOS. ",(0,i.jsx)(n.a,{href:"#user-content-fnref-nf","data-footnote-backref":"","aria-label":"Back to reference 2",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>o});var i=t(7294);const a={},r=i.createContext(a);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);