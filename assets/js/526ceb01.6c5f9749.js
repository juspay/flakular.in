"use strict";(self.webpackChunkflakular=self.webpackChunkflakular||[]).push([[4179],{834:(e,l,s)=>{s.r(l),s.d(l,{assets:()=>r,contentTitle:()=>h,default:()=>c,frontMatter:()=>o,metadata:()=>a,toc:()=>i});var n=s(5893),t=s(1151);const o={slug:"/haskell-flake/devshell"},h="DevShell",a={id:"modules/haskell-flake/guide/devshell",title:"DevShell",description:"haskell-flake uses the shellFor function to provide a Haskell development shell. shellFor in turn uses the standard mkShell function to create a Nix shell environment. The mkShellArgs option can be used to pass custom arguments to mkShell.",source:"@site/docs/modules/haskell-flake/guide/devshell.md",sourceDirName:"modules/haskell-flake/guide",slug:"/haskell-flake/devshell",permalink:"/haskell-flake/devshell",draft:!1,unlisted:!1,editUrl:"https://github.com/srid/haskell-flake/blob/master/doc/guide/devshell.md",tags:[],version:"current",frontMatter:{slug:"/haskell-flake/devshell"},sidebar:"tutorialSidebar",previous:{title:"Overriding dependencies",permalink:"/haskell-flake/dependency"},next:{title:"Project modules",permalink:"/haskell-flake/modules"}},r={},i=[{value:"Composing devShells",id:"composing-devshells",level:2}];function d(e){const l={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(l.h1,{id:"devshell",children:"DevShell"}),"\n",(0,n.jsxs)(l.p,{children:["haskell-flake uses the ",(0,n.jsx)(l.a,{href:"https://nixos.org/manual/nixpkgs/unstable/#haskell-shellFor",children:(0,n.jsx)(l.code,{children:"shellFor"})})," function to provide a Haskell development shell. ",(0,n.jsx)(l.code,{children:"shellFor"})," in turn uses the standard ",(0,n.jsx)(l.a,{href:"https://nixos.org/manual/nixpkgs/stable/#sec-pkgs-mkShell",children:(0,n.jsx)(l.code,{children:"mkShell"})})," function to create a Nix shell environment. The ",(0,n.jsx)(l.code,{children:"mkShellArgs"})," option can be used to pass custom arguments to ",(0,n.jsx)(l.code,{children:"mkShell"}),"."]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-nix",children:"{\n  haskellProjects.default = {\n    devShell = {\n      mkShellArgs = {\n        shellHook = ''\n          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${pkgs.flint}/lib\n        ''\n      };\n    }\n  }\n}\n"})}),"\n",(0,n.jsx)(l.h2,{id:"composing-devshells",children:"Composing devShells"}),"\n",(0,n.jsxs)(l.p,{children:["While ",(0,n.jsx)(l.code,{children:"mkShellArgs"})," is a convenient way to extend the Haskell devShell, sometimes you want to compose multiple devShell environments in a way you want."]}),"\n",(0,n.jsxs)(l.p,{children:["The devShell of a haskell-flake project is exposed in the ",(0,n.jsx)(l.code,{children:"config.haskellProjects.<name>.outputs.devShell"})," attribute. You can pass this devShell to the ",(0,n.jsx)(l.code,{children:"inputsFrom"})," argument of a ",(0,n.jsx)(l.a,{href:"https://nixos.org/manual/nixpkgs/stable/#sec-pkgs-mkShell",children:(0,n.jsx)(l.code,{children:"mkShell"})})," function in order to include the Haskell devShell in another devShell. The same technique can be used to compose devShells created by other flake-parts modules."]}),"\n",(0,n.jsxs)(l.p,{children:["For example, ",(0,n.jsx)(l.a,{href:"https://github.com/srid/haskell-template/blob/fc263b19e4ef02710ffc61fc656aec6c1a873974/flake.nix#L96-L102",children:"in haskell-template"}),", we create a top-level devShell that merges the devShell of the haskell-flake project, the devShell of ",(0,n.jsx)(l.a,{href:"/mission-control",children:"mission-control"})," and the devShell of ",(0,n.jsx)(l.a,{href:"https://github.com/srid/flake-root",children:"flake-root"})," as follows::"]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-nix",children:"{\n  devShell = pkgs.mkShell {\n    inputsFrom = [\n      config.haskellProjects.default.outputs.devShell\n      config.flake-root.devShell\n      config.mission-control.devShell\n    ];\n  };\n}\n"})}),"\n",(0,n.jsxs)(l.p,{children:["This sort of composition is either impossible or very complex to do with the ",(0,n.jsx)(l.code,{children:"mkShellArgs"})," approach."]})]})}function c(e={}){const{wrapper:l}={...(0,t.a)(),...e.components};return l?(0,n.jsx)(l,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,l,s)=>{s.d(l,{Z:()=>a,a:()=>h});var n=s(7294);const t={},o=n.createContext(t);function h(e){const l=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function a(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:h(e.components),n.createElement(o.Provider,{value:l},e.children)}}}]);