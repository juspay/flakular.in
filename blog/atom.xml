<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zero-to-flakes.com/blog</id>
    <title>Zero to Flakes Blog</title>
    <updated>2023-09-08T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zero-to-flakes.com/blog"/>
    <subtitle>Zero to Flakes Blog</subtitle>
    <icon>https://zero-to-flakes.com/img/logo.svg</icon>
    <entry>
        <title type="html"><![CDATA[Nixify your haskell project: Introduction]]></title>
        <id>https://zero-to-flakes.com/blog/nixify-haskell-project-intro</id>
        <link href="https://zero-to-flakes.com/blog/nixify-haskell-project-intro"/>
        <updated>2023-09-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introduction to simplifying haskell development with nix.]]></summary>
        <content type="html"><![CDATA[<p>This is the start of a series of blog posts aimed at simplifying Haskell development &amp; packaging workflow using <a href="https://nixos.org/" target="_blank" rel="noopener noreferrer">Nix</a>. In this post, we begin the series by nixifying a Haskell application that uses PostgreSQL database and package it for end-users to run with one command.</p><p>Nix is a powerful package manager and build system that provides reproducible and declarative development environment. We will utilize <a href="https://nixos.wiki/wiki/Flakes" target="_blank" rel="noopener noreferrer">Nix flakes</a> to declaratively configure this environment.</p><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_S0QG"><p>We strongly recommend flakes for anyone getting started with Nix. Flakes is <a href="https://determinate.systems/posts/experimental-does-not-mean-unstable" target="_blank" rel="noopener noreferrer">production ready despite being marked as experimental</a>.</p></div></div><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>The <a href="/nixpkgs-haskell">Haskell infrastructure in nixpkgs</a> is the simplest way to get started with Nixifying a Haskell project. There are also other approaches (like <a href="https://github.com/input-output-hk/haskell.nix" target="_blank" rel="noopener noreferrer">haskell.nix</a>, <a href="https://github.com/cdepillabout/stacklock2nix" target="_blank" rel="noopener noreferrer">stacklock2nix</a>). Later in the blog post series, we'll explore <a href="/haskell-flake">haskell-flake</a> which builds on top of the Haskell infrastructure in nixpkgs</p></div></div><p>If you're unfamiliar with Nix, we have <a href="/nix-rapid">a quick introduction</a> available to help you get started quickly or you can take your time and explore it at <a href="https://zero-to-nix.com" target="_blank" rel="noopener noreferrer">Zero to Nix</a>. A basic understanding of the Nix expression language is assumed.
Throughout the series, we will utilize a simple Haskell app called <a href="https://github.com/juspay/todo-app/tree/903c769d4bda0a8028fe3775415e9bdf29d80555" target="_blank" rel="noopener noreferrer">todo-app</a> to illustrate how to build a Haskell project and automatically manage runtime dependencies such as databases (ie., <a href="https://www.postgresql.org" target="_blank" rel="noopener noreferrer">postgres</a>) and and other services (here, we use <a href="https://postgrest.org/en/stable" target="_blank" rel="noopener noreferrer">postgREST</a>), eliminating the need for any manual onboarding setup. This will allow us to highlight the advantages of using Nix.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-nixify">Why Nixify?<a href="#why-nixify" class="hash-link" aria-label="Direct link to Why Nixify?" title="Direct link to Why Nixify?">​</a></h2><p>Why use Nix to develop a Haskell project rather than something like Stack or GHCup?</p><ul><li><strong>Instant onboarding</strong>: Projects have READMEs that describe how to setup the development environment but these instructions do not work the same way for
every developer and usually takes hours or days to setup. With Nix the setup is instantaneous and reproducible,<sup id="fnref-1-35de7b"><a href="#fn-1-35de7b" class="footnote-ref">1</a></sup> which means any new developer
can get the development environment up and running with one command.</li><li><strong>Enhanced productivity</strong>: More time spent on writing Haskell as Nix gives a fully working development environment with <code>nix develop</code>.</li><li><strong>Multi-platform</strong>: Same configuration generally works on macOS, Linux and WSL.<div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_S0QG"><p>Although macOS doesn't have first-class support in nixpkgs, <a href="https://github.com/NixOS/nixpkgs/issues/116341" target="_blank" rel="noopener noreferrer">it is getting there</a>.</p></div></div></li></ul><p>The rest of this blog post will provide a step-by-step demonstration of how to Nixify the todo-app project.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduce-flake">Introduce Flake<a href="#introduce-flake" class="hash-link" aria-label="Direct link to Introduce Flake" title="Direct link to Introduce Flake">​</a></h2><p>To begin, clone the <a href="https://github.com/juspay/todo-app/tree/903c769d4bda0a8028fe3775415e9bdf29d80555" target="_blank" rel="noopener noreferrer">todo-app</a> repository and checkout the specified commit.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://github.com/juspay/todo-app.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd todo-app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git checkout 076185e34f70e903b992b597232bc622eadfcd51</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Next, in the project's root directory, create a file named <code>flake.nix</code> and run <code>git add flake.nix</code> (Nix searches for <code>flake.nix</code> in git files). We will begin by setting up a basic template for the flake, which includes:</p><ul><li>Defining <code>inputs</code> and <code>outputs</code></li><li>Specifying the <code>system</code> corresponding to your machine.</li></ul><p>Tl;dr This is how your <code>flake.nix</code> will look:</p><div class="language-nix codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">flake.nix</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-nix codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  inputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nixpkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"github:NixOS/nixpkgs/nixpkgs-unstable"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  outputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nixpkgs </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      system </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"aarch64-darwin"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pkgs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nixpkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">legacyPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      packages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">default </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hello</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      apps</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">default </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"app"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        program </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation antiquotation important" style="color:#e3116c">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">pkgs</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation" style="color:#e3116c">hello</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">/bin/hello"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      devShells</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">default </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">mkShell </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        buildInputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hello</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>A nix flake such as the one above consumes certain <code>inputs</code> and produces certain <code>outputs</code>. Let's break down each part of this <code>flake.nix</code>:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="inputs">Inputs<a href="#inputs" class="hash-link" aria-label="Direct link to Inputs" title="Direct link to Inputs">​</a></h3><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>There are two ways to access the attributes of <code>inputs</code> within <code>outputs</code>:</p><ul><li>Adding the attribute as a parameter to <code>outputs</code>, like <code>outputs = { self, &lt;attribute&gt; }</code>. This allows you to use the <code>&lt;attribute&gt;</code> without requiring any prefix.</li><li>Bind a variable to all the parameters of <code>outputs</code>, like <code>outputs = inputs@{self, ...}</code>. This enables you to access any attribute from <code>inputs</code> in this fashion: <code>inputs.&lt;attribute&gt;</code>.</li></ul></div></div><p>A flake can reference other flakes, which are specified in the <code>inputs</code> attribute. We will use the <a href="https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-flake.html#url-like-syntax" target="_blank" rel="noopener noreferrer">URL-like representation</a> to specify our input flakes.</p><p>In this example, we will use <a href="https://www.gnu.org/software/hello" target="_blank" rel="noopener noreferrer">GNU hello</a> package from <a href="https://github.com/NixOS/nixpkgs" target="_blank" rel="noopener noreferrer"><code>nixpkgs</code></a> flake. Therefore, we'll specify the nixpkgs flake as an input, specifically using its <code>nixpkgs-unstable</code> branch.</p><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_S0QG"><p><code>nixpkgs-unstable</code> branch is named as such because of the frequent updates it receives and doesn't imply that it is unsafe.</p></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="outputs">Outputs<a href="#outputs" class="hash-link" aria-label="Direct link to Outputs" title="Direct link to Outputs">​</a></h3><p>The <code>outputs</code> attribute of a flake is essentially a Nix function that takes inputs and returns the outputs attribute. </p><p>The inputs argument is an attrset containing <code>self</code> as well as the flake inputs (in our flake, we reference the only input <code>nixpkgs</code>).</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p><code>self</code> refers to the final state of attributes in the <code>outputs</code>. For example, <code>self.packages.${system}.default</code> refers to the attribute after assigning <code>pkgs.hello</code> to it.</p></div></div><p><a href="https://nixos.wiki/wiki/Flakes#Output_schema" target="_blank" rel="noopener noreferrer">Refer here</a> for a detailed schema of <code>outputs</code>. Note that the <code>nixpkgs</code> key within the inputs attrset refers to the <code>outputs</code> of the <code>flake.nix</code> located at <code>nixpkgs.url</code>. If <code>nixpkgs.flake = false</code> is set, then the parameter will represent the source code.</p><p>The body of the function defines the flake outputs. Within the <code>let</code> block we define two values -- <code>system</code> (set as "aarch64-darwin" in this example, assuming we are on an ARM mac) and <code>pkgs</code> (referring to nixpkgs packages for <code>system</code>). In our example, <code>system</code> is hardcoded to a single system, but <a href="https://zero-to-nix.com/concepts/flakes#system-specificity" target="_blank" rel="noopener noreferrer">forAllSystems</a> can be used to define packages for an array of systems.</p><p>Here are some standard outputs a flake may produce:</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="packages">Packages<a href="#packages" class="hash-link" aria-label="Direct link to Packages" title="Direct link to Packages">​</a></h4><ul><li>A flake's <code>packages.${system}</code> output contains <a href="https://nixos.org/manual/nix/stable/language/derivations.html" target="_blank" rel="noopener noreferrer">derivations</a> that can be utilized to build the package.</li><li>Executing <code>nix build</code> will build the <code>packages.${system}.default</code> output. Run <code>nix build .#&lt;packageName&gt;</code> to build the package named <code>packages.${system}.&lt;packageName&gt;</code>.</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="apps">Apps<a href="#apps" class="hash-link" aria-label="Direct link to Apps" title="Direct link to Apps">​</a></h4><ul><li>A flake's <code>apps.${system}.&lt;appName&gt;</code> output refers to a flake app that can be exeucted using <code>nix run</code>. <ul><li>It is attribute set containing two keys <code>type</code> and <code>program</code>. The <code>type</code> attribute determines how the program should be executed. For instance, "shell" indicates a shell script, "python" indicates a Python script, and "app" indicates an executable. The <code>program</code> attribute is a string representing the path in the Nix store where the executable is located.</li></ul></li><li>Executing <code>nix run</code> will run the <code>apps.${system}.default</code> app. Run <code>nix run .#&lt;appName&gt;</code> to run the app named <code>&lt;appName&gt;</code>.</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="devshells">DevShells<a href="#devshells" class="hash-link" aria-label="Direct link to DevShells" title="Direct link to DevShells">​</a></h4><ul><li>By utilizing <code>pkgs.mkShell</code>, you can configure your development shell to include only the necessary packages.</li><li><code>pkgs.mkShell</code> generates a derivation that is evaluated when running the <code>nix develop</code> command.</li><li>By default the derivation specified by <code>devShells.${system}.default</code> is evaluated. However, you also have the flexibility to define a custom development shell, such as <code>devShells.${system}.mydevShell</code> and execute it using <code>nix develop .#mydevShell</code></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="visualize-the-flake-outputs">Visualize the flake outputs<a href="#visualize-the-flake-outputs" class="hash-link" aria-label="Direct link to Visualize the flake outputs" title="Direct link to Visualize the flake outputs">​</a></h4><ul><li>Run <code>nix flake show</code><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_S0QG"><p>Run <code>nix flake show --allow-import-from-derivation</code> in the further sections as <code>callCabal2nix</code> relies on <a href="https://nixos.wiki/wiki/Import_From_Derivation" target="_blank" rel="noopener noreferrer">IFD</a></p></div></div></li></ul><p>Here's how it will look:</p><div class="language-nix codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-nix codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">├───apps</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └───aarch64</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">darwin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│       └───default</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├───devShells</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └───aarch64</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">darwin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│       └───default</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> development environment 'nix</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">shell'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└───packages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    └───aarch64</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">darwin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        └───default</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> package 'hello</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token number" style="color:#36acaa">12</span><span class="token punctuation" style="color:#393A34">.</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="see-the-flake-in-action">See the flake in action<a href="#see-the-flake-in-action" class="hash-link" aria-label="Direct link to See the flake in action" title="Direct link to See the flake in action">​</a></h4><div>Loading asciinema cast...</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nixify-haskell-package">Nixify Haskell package<a href="#nixify-haskell-package" class="hash-link" aria-label="Direct link to Nixify Haskell package" title="Direct link to Nixify Haskell package">​</a></h2><p>In the previous section we wrote a hello world flake that contains the "hello" package. Now, let's write a flake for our Haskell project <code>todo-app</code>.</p><p>Tl;dr Here is the <code>flake.nix</code> for this section:</p><div class="language-nix codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">flake.nix</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-nix codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  inputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nixpkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"github:NixOS/nixpkgs/nixpkgs-unstable"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  outputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nixpkgs </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      system </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"aarch64-darwin"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pkgs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nixpkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">legacyPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      overlay </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> final</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> prev</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        todo</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> final</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">callCabal2nix </span><span class="token string" style="color:#e3116c">"todo-app"</span><span class="token plain"> </span><span class="token url" style="color:#36acaa">./.</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      myHaskellPackages </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">haskellPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">extend overlay</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      packages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">default </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> myHaskellPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">todo</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      apps</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">default </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"app"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        program </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation antiquotation important" style="color:#e3116c">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">self</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation" style="color:#e3116c">packages</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation antiquotation important" style="color:#e3116c">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">system</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation" style="color:#e3116c">default</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">/bin/todo-app"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Let's break it down!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="haskellpackages">haskellPackages<a href="#haskellpackages" class="hash-link" aria-label="Direct link to haskellPackages" title="Direct link to haskellPackages">​</a></h3><p>Consult <a href="https://nixos.org/manual/nixpkgs/unstable/#haskell" target="_blank" rel="noopener noreferrer">the official manual</a> to learn more about the Haskell infrastructure in nixpkgs, but for the purpose of our blog post it is suffice to know that:</p><ul><li><code>pkgs.haskellPackages</code> is an attribute set that contains all Haskell packages maintained within <code>nixpkgs</code>.</li><li>Since our local package (<code>todo-app</code>) is not already included in <code>pkgs.haskellPackages</code>, we need to manually add it.</li><li>Technically, you can use <code>packages.${system}.default = pkgs.${system}.haskellPackages.callCabal2nix "todo-app" ./. { };</code> to include the package. However, adding it to <code>haskellPackages</code> consolidates every Haskell package in one place. </li></ul><p>In summary, adding the local package to <code>pkgs.haskellPackages</code> centralizes the package management process and simplifies the usage of the package within other flakes.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="overlay">Overlay<a href="#overlay" class="hash-link" aria-label="Direct link to Overlay" title="Direct link to Overlay">​</a></h3><p><a href="https://nixos.wiki/wiki/Overlays" target="_blank" rel="noopener noreferrer">Overlays</a> are used to override an existing package set, such as <code>pkgs.haskellPackages</code>, and produce a new package set containing the changes. These changes could be either about overriding a single package in the package set (the second argument <code>super</code> references the original package set), or it could be about adding new packages to it. </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="callcabal2nix">callCabal2nix<a href="#callcabal2nix" class="hash-link" aria-label="Direct link to callCabal2nix" title="Direct link to callCabal2nix">​</a></h3><p>The <code>callCabal2nix</code> function generates a Haskell package derivation based on its source. This function internally utilizes <a href="https://github.com/NixOS/cabal2nix" target="_blank" rel="noopener noreferrer">"cabal2nix"</a>, which is a Haskell utility that generates Nix build instructions from a cabal file.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="time-to-run">Time to run!<a href="#time-to-run" class="hash-link" aria-label="Direct link to Time to run!" title="Direct link to Time to run!">​</a></h3><div>Loading asciinema cast...</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nixify-devshell">Nixify DevShell<a href="#nixify-devshell" class="hash-link" aria-label="Direct link to Nixify DevShell" title="Direct link to Nixify DevShell">​</a></h2><p>Our existing flake enables us to <em>build</em> the <code>todo-app</code>. However, what if want to develop it, by adding a feature or fixing a bug? For Haskell development, we normally use <a href="https://cabal.readthedocs.io/" target="_blank" rel="noopener noreferrer">cabal</a> and tools like <a href="https://github.com/ndmitchell/ghcid" target="_blank" rel="noopener noreferrer">ghcid</a>. These tools require a GHC environment that includes the packages specified in the <code>build-depends</code> of our cabal file. This is where <code>devShell</code> becomes useful as it provides an isolated environment with all packages required by the project, catering to our development needs.</p><p>Tl;dr Here is the <code>flake.nix</code> for this section:</p><div class="language-nix codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">flake.nix</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-nix codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  inputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nixpkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"github:NixOS/nixpkgs/nixpkgs-unstable"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  outputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nixpkgs </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      system </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"aarch64-darwin"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pkgs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nixpkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">legacyPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      overlay </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> final</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> prev</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        todo</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> final</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">callCabal2nix </span><span class="token string" style="color:#e3116c">"todo-app"</span><span class="token plain"> </span><span class="token url" style="color:#36acaa">./.</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      myHaskellPackages </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">haskellPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">extend overlay</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      devShells</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">default </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> myHaskellPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">shellFor </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        packages </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p </span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">todo</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        buildInputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> myHaskellPackages</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          ghcid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          cabal</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="shellfor">shellFor<a href="#shellfor" class="hash-link" aria-label="Direct link to shellFor" title="Direct link to shellFor">​</a></h3><ul><li>In the above flake, we utilize the <a href="https://nixos.wiki/wiki/Haskell#Using_shellFor_.28multiple_packages.29" target="_blank" rel="noopener noreferrer"><code>shellFor</code></a> function from the <code>haskellPackages</code> attribute set to set up the default shell for our project. </li><li><code>shellFor</code> is an abstraction over <a href="https://ryantm.github.io/nixpkgs/builders/special/mkshell/" target="_blank" rel="noopener noreferrer"><code>mkShell</code></a> geared specifically for Haskell development shells. Generally, we only need to define two keys <code>packages</code> and <code>nativeBuildInputs</code>. <code>packages</code> marks which of the packages in the package set are <em>local</em> packages (to be compiled by cabal). <code>nativeBuildInputs</code> is used to ensure that the specified packages are present in the <code>PATH</code> of the isolated development environment.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="lets-run">Let's run!<a href="#lets-run" class="hash-link" aria-label="Direct link to Let's run!" title="Direct link to Let's run!">​</a></h3><div>Loading asciinema cast...</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nixify-external-dependencies">Nixify external dependencies<a href="#nixify-external-dependencies" class="hash-link" aria-label="Direct link to Nixify external dependencies" title="Direct link to Nixify external dependencies">​</a></h2><p>Up until now, we have nixified the Haskell portion of our project. However, a project can also have non-Haskell dependencies, like Postgres, MySQL and Redis. In this section we will specifically look at how you can start a postgres server using Nix without relying or mutating global state (outside of project directory).</p><p>Tl;dr Here's the <code>flake.nix</code>:</p><div class="language-nix codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">flake.nix</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-nix codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  inputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nixpkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"github:NixOS/nixpkgs/nixpkgs-unstable"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  outputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nixpkgs </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    system </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"aarch64-darwin"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pkgs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nixpkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">legacyPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apps</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">postgres </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"app"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      program </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          script </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">writeShellApplication </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pg_start"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            runtimeInputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">postgresql </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            text </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">''</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">              # Initialize a database with data stored in current project dir</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">              [ ! -d "./data/db" ] &amp;&amp; initdb --no-locale -D ./data/db</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="display:inline-block;color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">              postgres -D ./data/db -k "$PWD"/data</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">            ''</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation antiquotation important" style="color:#e3116c">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">script</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">/bin/pg_start"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="writeshellapplication">writeShellApplication<a href="#writeshellapplication" class="hash-link" aria-label="Direct link to writeShellApplication" title="Direct link to writeShellApplication">​</a></h3><ul><li>The <a href="https://noogle.dev/?selected=%22build-support.trivial-builders.writeShellApplication%22&amp;term=%22writeShellApplication%22" target="_blank" rel="noopener noreferrer"><code>writeShellApplication</code></a> function generates a derivation for a shell script specified as the value for <code>text</code> attribute. </li><li><code>runtimeInputs</code>: packages to be made available to the shell application's PATH.</li><li><code>writeShellApplication</code> uses <a href="https://github.com/koalaman/shellcheck" target="_blank" rel="noopener noreferrer">shellcheck</a> to statically analyze your bash script for issues.</li><li><code>"${script}"</code> provides the path in the <code>nix/store</code> where the application is located.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="run-it">Run it!<a href="#run-it" class="hash-link" aria-label="Direct link to Run it!" title="Direct link to Run it!">​</a></h3><div>Loading asciinema cast...</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nixify-combined">Nixify Combined<a href="#nixify-combined" class="hash-link" aria-label="Direct link to Nixify Combined" title="Direct link to Nixify Combined">​</a></h2><p>Now it's time to consolidate all the previously discussed sections into a single <code>flake.nix</code>. Additionally, we should incorporate the necessary apps for <code>postgrest</code> and <code>createdb</code>. <code>postgrest</code> app will start the service and <code>createdb</code> will handle tasks such as loading the database dump, creating a database user, and configuring the database for postgREST.</p><div class="language-nix codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">flake.nix</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-nix codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  inputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nixpkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"github:NixOS/nixpkgs/nixpkgs-unstable"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  outputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nixpkgs </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      system </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"aarch64-darwin"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pkgs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nixpkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">legacyPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      overlay </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> final</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> prev</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        todo</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> final</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">callCabal2nix </span><span class="token string" style="color:#e3116c">"todo-app"</span><span class="token plain"> </span><span class="token url" style="color:#36acaa">./.</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      myHaskellPackages </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">haskellPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">extend overlay</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      packages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">default </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> myHaskellPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">todo</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      devShells</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">default </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> myHaskellPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">shellFor </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        packages </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">todo</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        buildInputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> myHaskellPackages</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          ghcid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          cabal</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          haskell</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">language</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      apps</span><span class="token punctuation" style="color:#393A34">.</span><span class="token antiquotation important">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">system</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        default </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"app"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          program </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation antiquotation important" style="color:#e3116c">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">self</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation" style="color:#e3116c">packages</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation antiquotation important" style="color:#e3116c">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">system</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation" style="color:#e3116c">default</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">/bin/todo-app"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        postgres </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"app"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          program </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              script </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">writeShellApplication </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pg_start"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                runtimeInputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">postgresql </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                text </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token string" style="color:#e3116c">''</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    # Initialize a database with data stored in current project dir</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    [ ! -d "./data/db" ] &amp;&amp; initdb --no-locale -D ./data/db</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="display:inline-block;color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    postgres -D ./data/db -k "$PWD"/data</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                  ''</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation antiquotation important" style="color:#e3116c">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">script</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">/bin/pg_start"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        createdb </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"app"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          program </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              script </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">writeShellApplication </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"createDB"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                runtimeInputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">postgresql </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                text </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token string" style="color:#e3116c">''</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    # Create a database of your current user</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    if ! psql -h "$PWD"/data -lqt | cut -d \| -f 1 | grep -qw "$(whoami)"; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                      createdb -h "$PWD"/data "$(whoami)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="display:inline-block;color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    # Load DB dump</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    psql -h "$PWD"/data &lt; db.sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="display:inline-block;color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    # Create configuration file for postgrest</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    echo "db-uri = \"postgres://authenticator:mysecretpassword@localhost:5432/$(whoami)\"</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    db-schemas = \"api\"</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    db-anon-role = \"todo_user\"" &gt; data/db.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                  ''</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation antiquotation important" style="color:#e3116c">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">script</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">/bin/createDB"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        postgrest </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"app"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          program </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              script </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pkgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">writeShellApplication </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pgREST"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                runtimeInputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> myHaskellPackages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">postgrest </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                text </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token string" style="color:#e3116c">''</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    postgrest ./data/db.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                  ''</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation antiquotation important" style="color:#e3116c">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">script</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">/bin/pgREST"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For the complete souce code, visit <a href="https://github.com/juspay/todo-app/tree/tutorial/1" target="_blank" rel="noopener noreferrer">here</a>. It's worth noting that the source code uses <a href="https://zero-to-nix.com/concepts/flakes#system-specificity" target="_blank" rel="noopener noreferrer"><code>forAllSystems</code></a>, which was not included in the tutorial above to maintain simplicity.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="video-walkthrough">Video Walkthrough<a href="#video-walkthrough" class="hash-link" aria-label="Direct link to Video Walkthrough" title="Direct link to Video Walkthrough">​</a></h3><div>Loading asciinema cast...</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2><p>Let's see how the blog post addresses the points from the section <a href="#why-nixify">Why Nixify?</a> </p><ul><li><strong>Instant onboarding</strong>: There is no confusion about how to setup the development environment. It is <code>nix run .#postgres</code> to start the postgres server,
<code>nix run .#createdb</code> to setup the database and <code>nix run .#postgrest</code> to start the Postgrest web server. This happens in a reproducible way, ensuring every
developer gets the same environment.</li><li><strong>Enhanced productivity</strong>: The commands mentioned in the previous points in conjunction with <code>nix develop</code> is all that is needed to make a quick change
and see it in effect.</li><li><strong>Multi-platform</strong>: All the commands mentioned in the previous points will work in the same way across platforms.</li></ul><p>In the next blog post, we will modularize this <code>flake.nix</code> using the <a href="https://flake.parts/" target="_blank" rel="noopener noreferrer"><code>flake-parts</code></a> framework by Robert Hensing.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="credits">Credits<a href="#credits" class="hash-link" aria-label="Direct link to Credits" title="Direct link to Credits">​</a></h2><ul><li>After going through numerous iterations, I am grateful to <a href="https://srid.ca/" target="_blank" rel="noopener noreferrer">srid</a> for his valuable assistance in bringing this blog to its current stage.</li><li>I would also like to thank the following folks for their valuable feedback:<ul><li><a href="https://github.com/cdepillabout" target="_blank" rel="noopener noreferrer">cdepillabout</a></li><li><a href="https://github.com/leomayleomay" target="_blank" rel="noopener noreferrer">Hao Liu</a></li></ul></li></ul><div class="footnotes"><hr><ol><li id="fn-1-35de7b">Considering the packages are available in Nix for the host platform.<a href="#fnref-1-35de7b" class="footnote-backref">↩</a></li></ol></div>]]></content>
        <author>
            <name>Shivaraj B H</name>
            <uri>https://github.com/shivaraj-bh</uri>
        </author>
        <category label="haskell" term="haskell"/>
        <category label="basics" term="basics"/>
        <category label="flakes" term="flakes"/>
        <category label="nix" term="nix"/>
    </entry>
</feed>